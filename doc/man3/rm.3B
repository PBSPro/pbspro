.\" Copyright (c) 2003-2018 Altair Engineering, Inc.  All rights reserved.
.\"
.\" ALTAIR ENGINEERING INC. Proprietary and Confidential. Contains Trade 
.\" Secret Information. Not for use or disclosure outside of Licensee's 
.\" organization. The software and information contained herein may only 
.\" be used internally and is provided on a non-exclusive, 
.\" non-transferable basis.  Licensee may not sublicense, sell, lend, 
.\" assign, rent, distribute, publicly display or publicly perform the 
.\" software or other information provided herein, nor is Licensee 
.\" permitted to decompile, reverse engineer, or disassemble the 
.\" software. Usage of the software and other information provided by 
.\" Altair (or its resellers) is only as explicitly stated in the 
.\" applicable end user license agreement between Altair and Licensee. In 
.\" the absence of such agreement, the Altair standard end user license 
.\" agreement terms shall govern. 
.\"
.\"
.\" Copyright notice does not imply publication. 
.\"
.\" @(#)string.3 1.32 90/02/03 TMP;
.TH RM 3 "29 August 2011" Local "PBS Professional"
.SH NAME
openrm, closerm, downrm, configrm, addreq, allreq, getreq, flushreq, activereq, fullresp \- resource monitor API
.SH SYNOPSIS

.B #include <sys/types.h>
.br
.B #include <netinet/in.h>
.br
.B #include <rm.h>

.LP
.B
int openrm (host, port)
.br
.RS 6
char *host;
.br
unsigned int port;
.RE
.LP
.B int closerm (stream) 
.br
.RS 6
int stream;
.RE
.LP
.B
int downrm (stream)   
.br
.RS 6
int stream;
.RE
.LP
.B
int configrm (stream, file)
.br
.RS 6
int stream;
.br
char *file;
.RE
.LP
.B
int addreq (stream, line)
.br
.RS 6
int stream; 
.br
char *line;
.RE
.LP
.B
int allreq (line) 
.br
.RS 6
char *line; 
.RE
.LP
.B
char *getreq(stream)  
.br
.RS 6
int stream;
.RE
.LP
.B
int flushreq() 
.LP
.B
int activereq()
.LP
.B
void fullresp(flag)  
.br
.RS 6
int flag; 
.RE
.SH DESCRIPTION
.LP
The resource monitor library contains functions to facilitate
communication with the PBS Professional resource monitor. It is set up
to make it easy to connect to several resource monitors and
handle the network communication efficiently.
.LP
In all these routines, the variable
.B pbs_errno
will be set when an error is indicated.
The lower levels of network protocol are handled by the
"Data Is Strings" 
.I DIS
library and the "Reliable Packet Protocol"
.I RPP
library.

.LP
.B configrm() 
causes the resource monitor to read the file named. 
.B Deprecated.

.LP
.B addreq()
begins a new message to the resource monitor if necessary.
Then adds a line to the body of an outstanding command to the resource
monitor.

.LP
.B allreq()
begins, for each stream, a new message to the resource monitor if necessary.
Then adds a line to the body of an outstanding command to the resource
monitor.

.LP
.B getreq()
finishes and sends any outstanding message to the resource monitor.
If
.B fullresp()
has been called to turn off "full response" mode, the routine
searches down the line to find the equal sign just before the
response value.
The returned string (if it is not NULL) has been allocated by
.I malloc
and thus
.I free
must be called when it is no longer needed to prevent memory leaks.

.LP
.B flushreq()
finishes and sends any outstanding messages to all resource monitors.
For each active resource monitor structure, it checks if any
outstanding data is waiting to be sent. If there is, it is sent and
the internal structure is marked to show "waiting for response".

.LP
.B fullresp()
turns on, if flag is true, "full response" mode where
.B getreq()
returns a pointer to the beginning of a line of response.
This is the default.  If flag is false,
the line returned by
.B getreq()
is just the answer following the equal sign.

.LP
.B activereq()
Returns the stream number of the next stream with something
to read or a negative number (the return from
.I rpp_poll )
if there is no stream to read.

In order to use any of the above with Windows, initialize the network
library and link with 
.B winsock2.  
To do this, call 
.B winsock_init() 
before calling the function and link against the 
.B ws2_32.lib 
library.

.SH SEE ALSO
.BR rpp (3B),
.BR tcp (4P),
.BR udp (4P)
