.\" Copyright (c) 2003-2018 Altair Engineering, Inc.  All rights reserved.
.\"
.\" ALTAIR ENGINEERING INC. Proprietary and Confidential. Contains Trade 
.\" Secret Information. Not for use or disclosure outside of Licensee's 
.\" organization. The software and information contained herein may only 
.\" be used internally and is provided on a non-exclusive, 
.\" non-transferable basis.  Licensee may not sublicense, sell, lend, 
.\" assign, rent, distribute, publicly display or publicly perform the 
.\" software or other information provided herein, nor is Licensee 
.\" permitted to decompile, reverse engineer, or disassemble the 
.\" software. Usage of the software and other information provided by 
.\" Altair (or its resellers) is only as explicitly stated in the 
.\" applicable end user license agreement between Altair and Licensee. In 
.\" the absence of such agreement, the Altair standard end user license 
.\" agreement terms shall govern. 
.\"
.\"
.\" Copyright notice does not imply publication. 
.\"
.TH pbs_delresv 3B "26 August 2011" Local "PBS Professional"
.SH NAME
pbs_delresv - delete a reservation 
.SH SYNOPSIS
#include <pbs_error.h>
.br
#include <pbs_ifl.h>
.sp
.B int pbs_delresv\^(\^int\ connect, char\ *resv_id, char\ *extend\^)

.SH DESCRIPTION
Issue a batch request to delete a reservation.
If the reservation is in state RESV_RUNNING, and there are jobs remaining in 
the reservation queue, the jobs will be deleted before the reservation is 
deleted.
.LP
A 
.I "Delete Reservation"
batch request is generated and sent to the server over the connection
specified by
.I connect 
which is the return value of \f3pbs_connect\f1().
.LP
The argument,
.I resv_id ,
identifies which reservation is to be deleted, it is specified in the form:
.RS 4
.I "R<sequence_number>.<server>"
.RE
.LP
The argument, 
.I extend 
is currently unused.
.LP
.SH "SEE ALSO"
pbs_rdel(1B) and pbs_connect(3B)
.SH DIAGNOSTICS
When the batch request generated by the \f3pbs_delresv\f1()
function has been completed successfully
by a batch server, the routine will return 0 (zero).
Otherwise, a non zero error is returned.  The error number is also set
in pbs_errno.
